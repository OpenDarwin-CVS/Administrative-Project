#!/usr/bin/perl -U
# Copyright (c)  2002, Apple Computer, Inc. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
# 1.  Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# 2.  Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 
# 3.  Neither the name of Apple Computer, Inc. ("Apple") nor the names of
# its contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
$CVS_ROOT = "/cvs/od";
$PROJ_DIR = "proj";
$PROJ_NAME = $ENV{'OD_PROJ_NAME'};
$lockfile = "/tmp/addgroup.LOCK";

## Create the gid for the project.
##
system "/usr/bin/lockfile -r-1 $lockfile";

$gid = &get_new_gid();

open NICL, "| nicl . > /dev/null";
print NICL "create /groups/$PROJ_NAME gid $gid\n";
print NICL "create /groups/$PROJ_NAME passwd *\n";
print NICL "create /groups/$PROJ_NAME users root\n";
print NICL "quit\n";
close NICL;

system "/bin/rm -f $lockfile";

print $gid, "\n";

## Create the CVS directory/module.
##
umask 0002;

if (mkdir ("$CVS_ROOT/$PROJ_DIR/$PROJ_NAME")) {
	chown 0, $gid, "$CVS_ROOT/$PROJ_DIR/$PROJ_NAME";
	$tmpdir = "/tmp/od_newproj.$$";
	mkdir $tmpdir or die;
	chdir $tmpdir or die;
	## print "/usr/bin/cvs -d $CVS_ROOT checkout CVSROOT >/dev/null\n";
	system "/usr/bin/cvs -d $CVS_ROOT checkout CVSROOT >/dev/null";
	chdir "CVSROOT" or die;
	open MODULES, ">>modules";
	print MODULES "$PROJ_NAME\t$PROJ_DIR/$PROJ_NAME\n";	
	close MODULES;
	system "/usr/bin/cvs -d $CVS_ROOT commit -m \"Module $PROJ_NAME added by email approval system.\" modules >/dev/null";
	chdir $tmpdir or die;
	system "/bin/rm -rf $tmpdir";
} else {
	exit 1;
}


## Create the mailing list and then 
## activate them via sendmail aliases. 
##
## print "Create lists.\n";
system "/usr/local/bin/od_create_lists";
## print "Activate lists.\n";
system "/usr/local/bin/od_activate_lists";
exit 0;


## get_new_gid()
## 
## This sub will scan the current netinfo db and extract the highest
## numbered gid greater than 999 currently available for use.
##
sub get_new_gid() {
        local $high_gid = 5317;  ## Magic number decreed by rbraun.
        local $a_gid = 0;
        local $junk;

        # Following is the cleanest I can do from a perl script.
        # I'd love to have an api for this.
        open UID, "nicl . list /groups gid |";
        while (<UID>) {
                chomp;
                ($junk, $a_gid) = split / +/;
                $high_gid = ($high_gid < $a_gid) ? $a_gid : $high_gid;
        }
        close UID;
        return ++$high_gid;
}

