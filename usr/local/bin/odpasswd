#!/usr/bin/perl -U
##
## odpasswd
## Kevin Van Vechten | kevin@opendarwin.org
##
## This script, when run as a privileged user, allows
## a user's password to be updated.  First the password
## stored in the database is updated, then the change
## is propogated to the UNIX password (NetInfo), then
## the SMTP password (SASL).
##
## C O M M A N D  L I N E   A R G U M E N T S 
##

$user     = $ARGV[0];
#$user     = $ENV{'OD_USER_NAME'};		# login name
#$passwd   = $ENV{'OD_PASSWORD'};		# password

##
## C O N S T A N T S
##

die "Invalid user name: $user" if !$user or ($user =~ m/[^A-Z0-9_]/i);
die "Must be run as root.\n" if $> != 0;

use DBI;
use Digest::MD5 qw(md5_hex);

my ($dsn) = "DBI:mysql:OpenDarwin:localhost";
my ($user_name, $password);
my ($dbh,$sth);
my (@ary);

my $secret = "/var/opendarwin/secrets/od_approve_secret";
open OD_SECRET, $secret or die "$secret: $!\n";                  
chomp($user_name = <OD_SECRET>);
chomp($password = <OD_SECRET>);
close OD_SECRET;

$dbh = DBI->connect ($dsn, $user_name, $password, {RaiseError => 1});

$sth = $dbh->prepare ("SELECT user_id FROM od_users WHERE name='$user'");
$sth->execute;
($user_id, $ssh_key) = $sth->fetchrow_array ();
$sth->finish;

die "Unknown user: $user" if !$user_id;

print "New password: ";
`stty -echo`;
my $password1 = <STDIN>;
print "\n";
print "Retype new password: ";
my $password2 = <STDIN>;
`stty echo`;
print "\n";

if ($password1 ne $password2) {
    print "Mismatch; try again.\n";
    exit 1;
} else {
    # Update the database.
    chomp($password1);
    my $digest = md5_hex($password1);
print "digest: $digest\n";
    $sth = $dbh->prepare("UPDATE od_users SET password='$digest' WHERE user_id='$user_id'");
    $sth->execute;
    $sth->finish;

    # Update the passwords.
    $ENV{'OD_USER_NAME'} = $user;
    $ENV{'OD_PASSWORD'} = $password1;
    `/usr/local/bin/od_set_passwd`;
}

exit 0;
